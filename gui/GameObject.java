package gui;
import java.awt.*;
import javax.swing.*;

public class GameObject extends JPanel implements Space {
	/**
	 * Autogenerated serialVersionUID
	 */
	private static final long serialVersionUID = -7568720897347446009L;
	private boolean occupied, perceivedOccupied;
	protected Point origo, point;
	private int size;
	protected Color myColor;
	
	public GameObject(int x,int y, boolean occupied, boolean perceivedOccupied, int size) {
		this.size = size;
		this.point = new Point(x,y);
		this.origo = new Point();
		this.origo.x = x+size/2;
		this.origo.y = y+size/2;
		this.occupied = occupied;
		this.perceivedOccupied = perceivedOccupied;
		setBounds(x,y,size,size);
	}
	public void setMyColor(){
		int min = 0, max = 255,r,g,b;
		do{
			r = min+(int)(Math.random()*((max-min)+1));
			g = min+(int)(Math.random()*((max-min)+1));
			b = min+(int)(Math.random()*((max-min)+1));
		}while ((r<230 && g<230 && b<230) || (r>100 && g>100 && b>100));
		this.myColor = new Color(r,g,b);
	}
	public Dimension getPreferredSize(){
		return new Dimension(size,size);
	}
	public boolean occupied(){
		return this.occupied;
	}
	public boolean perceivedOccupied(){
		return this.perceivedOccupied;
	}
	public Point getOrigo() {
		return this.origo;
	}
	public Point getPoint() {
		return this.point;
	}
	public boolean isAdjacent(Space space) {
		if(Math.abs(space.getOrigo().x-getOrigo().x) == getWidth() && Math.abs(space.getOrigo().y-getOrigo().y) == 0)
			return true;
		else if (Math.abs(space.getOrigo().y-getOrigo().y) == getHeight() && Math.abs(space.getOrigo().x-getOrigo().x) ==0)
			return true;
		return false;
	}
}
